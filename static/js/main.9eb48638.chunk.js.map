{"version":3,"sources":["view/About.js","component/Bar.js","component/ListView.js","lib/fetcher.js","component/Footer.js","view/HomeView.js","App.js","serviceWorker.js","index.js"],"names":["AboutView","Container","role","aria-label","href","rel","style","color","to","colorList","green","blue","yellow","red","default","Bar","props","name","rest","max","percentage","makeStyles","val","scheme","barColor","colorPrimary","backgroundColor","barColorPrimary","mapColor","display","flexDirection","marginLeft","marginRight","width","marginBottom","LinearProgress","variant","value","classes","ListView","title","listData","useMemo","data","length","filter","e","sort","a","b","concat","justifyContent","Grid","container","spacing","direction","loading","CircularProgress","alignSelf","marginTop","map","ele","item","key","getLibraryData","onSuccess","onFail","axios","get","process","then","res","status","dataLibMatcher","match","formatted","JSON","parse","numbers","areaName","inCounter","catch","getCanteenData","Name","Seat_s","Seat_u","Footer","className","listStyleType","fontSize","useStyles","theme","campusFilter","filterCampus","dataList","campusId","includes","HomeView","useLocalStorageState","campus","setCampus","useState","dataCanteen","setDataCanteen","dataLib","setDataLib","showSnackbar","setShowSnackbar","snackbarMsg","setSnackbarMsg","libDataLoading","setLibDataLoading","canteenDataLoading","setCanteenDataLoading","fetchData","openSnackbar","msg","useEffect","interval","setInterval","clearInterval","Tabs","indicatorColor","textColor","onChange","_","centered","Tab","label","justify","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","severity","App","basename","path","About","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","error","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9eb48638.chunk.js","sourcesContent":["import { Container } from '@material-ui/core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst AboutView = () => (\n  <>\n    <Container>\n      <h2>关于</h2>\n      <p>\n        <span role=\"img\" aria-label=\"data\">\n          👨‍💻\n        </span>{' '}\n        数据取自学校官方网站{' '}\n        <a href=\"https://canteen.sjtu.edu.cn/\" rel=\"nofollow\">\n          canteens\n        </a>{' '}\n        |{' '}\n        <a href=\"http://www.lib.sjtu.edu.cn/\" rel=\"nofollow\">\n          libraries\n        </a>\n      </p>\n      <p>\n        <span role=\"img\" aria-label=\"smile\">\n          😀\n        </span>{' '}\n        空旷优先，<b>余量</b>/总数\n      </p>\n      <p>\n        <span role=\"img\" aria-label=\"smile\">\n          🎨\n        </span>{' '}\n        <span style={{ color: '#4caf50' }}>人很少 </span>\n        <span style={{ color: '#2196f3' }}>人少 </span>\n        <span style={{ color: '#ff9800' }}>人多 </span>\n        <span style={{ color: '#f44336' }}>人很多 </span>\n        <span style={{ color: '#607d8b' }}>无效数据 </span>\n      </p>\n      <p>\n        <span role=\"img\" aria-label=\"bot\">\n          🤖\n        </span>{' '}\n        页面数据自动刷新\n      </p>\n      <h2>反馈</h2>\n      <a href=\"https://github.com/SeanChao/libsjtu/issues\">GitHub Issues</a>\n      <p></p>\n      <Link to=\"/\">返回</Link>\n    </Container>\n  </>\n);\n\nexport default AboutView;\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport PropTypes from 'prop-types';\n\nconst colorList = {\n  green: ['#4caf50', '#e8f5e9'],\n  blue: ['#2196f3', '#e3f2fd'],\n  yellow: ['#ff9800', '#fff3e0'],\n  red: ['#f44336', '#fbe9e7'],\n  default: ['#eceff1', '#607d8b'],\n};\n\nconst Bar = (props) => {\n  const name = props.name;\n  const rest = props.rest;\n  const max = props.max;\n  const percentage = (rest / max) * 100;\n\n  const mapColor = (val) => {\n    let scheme = '';\n    if (val >= 75) {\n      scheme = 'green';\n    } else if (val >= 50) {\n      scheme = 'blue';\n    } else if (val >= 25) {\n      scheme = 'yellow';\n    } else if (val < 25) {\n      scheme = 'red';\n    } else {\n      scheme = 'default';\n    }\n    const barColor = colorList[scheme][0];\n    const color = colorList[scheme][1];\n    return {\n      colorPrimary: {\n        backgroundColor: color,\n      },\n      barColorPrimary: {\n        backgroundColor: barColor,\n      },\n    };\n  };\n  const style = makeStyles(() => mapColor(percentage));\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', marginLeft: '10px', marginRight: '10px' }}>\n      <div style={{ display: 'flex', flexDirection: 'row', width: '100%', marginBottom: '10px' }}>\n        <div style={{ marginRight: 'auto' }}>{name}</div>\n        <div style={{ marginLeft: 'auto' }}>\n          <b>{rest}</b>/{max}\n        </div>\n      </div>\n      <LinearProgress variant=\"determinate\" value={percentage} classes={style()} />\n    </div>\n  );\n};\n\nexport default Bar;\n\nBar.propTypes = {\n  name: PropTypes.string.isRequired,\n  rest: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n};\n","import React, { useMemo } from 'react';\nimport Bar from './Bar';\nimport PropTypes from 'prop-types';\nimport { Grid, CircularProgress } from '@material-ui/core';\n\nconst ListView = (props) => {\n  const title = props.title;\n  const listData = useMemo(\n    () =>\n      props.data && props.data.length > 0\n        ? props.data\n            .filter((e) => e.max !== 0)\n            .sort((a, b) => b.rest / b.max - a.rest / a.max)\n            .concat(props.data.filter((e) => e.max === 0))\n        : [],\n    [props.data]\n  );\n  const renderList = (list) =>\n    list.map((ele) => (\n      <Grid item key={ele.name}>\n        <Bar name={ele.name} rest={ele.rest} max={ele.max} key={ele.name} />\n      </Grid>\n    ));\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n      <h2 style={{ marginLeft: 'auto', marginRight: 'auto' }}>{title}</h2>\n      <Grid container spacing={4} direction=\"column\">\n        {props.loading && <CircularProgress style={{ alignSelf: 'center', marginTop: '30px', marginBottom: '30px' }} />}\n        {renderList(listData)}\n      </Grid>\n    </div>\n  );\n};\n\nexport default ListView;\n\nListView.propTypes = {\n  title: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string, rest: PropTypes.number, max: PropTypes.number })).isRequired,\n  loading: PropTypes.bool,\n};\n","import axios from 'axios';\n\nconst libraryUrl = process.env.REACT_APP_LIBRARY_PROXY;\nconst canteenUrl = 'https://canteen.sjtu.edu.cn/CARD/Ajax/Place';\n\nexport const getLibraryData = async (onSuccess, onFail) => {\n  axios\n    .get(libraryUrl)\n    .then((res) => {\n      if (res.status === 200) {\n        const dataLibRaw = res.data;\n        const dataLibMatcher = dataLibRaw.match(/CountPerson\\((.*)\\)/);\n        const dataLib = dataLibMatcher.length > 1 ? JSON.parse(dataLibMatcher[1]).numbers : [];\n        const formatted = dataLib.map((e) => ({ name: e.areaName, rest: e.max - e.inCounter, max: e.max }));\n        onSuccess && onSuccess(formatted);\n      } else {\n        onFail && onFail();\n      }\n    })\n    .catch(() => onFail && onFail());\n};\n\nexport const getCanteenData = async (onSuccess, onFail) => {\n  axios\n    .get(canteenUrl)\n    .then((res) => {\n      if (res.status === 200) {\n        const formatted = res.data.map((e) => ({ name: e.Name, rest: e.Seat_s - e.Seat_u, max: e.Seat_s }));\n        onSuccess && onSuccess(formatted);\n      } else {\n        onFail && onFail();\n      }\n    })\n    .catch(() => onFail && onFail());\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Footer.css';\n\nconst Footer = () => (\n  <div\n    style={{\n      marginTop: '40px',\n      marginBottom: '40px',\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column',\n    }}\n  >\n    <ul className=\"footer footer-li\" style={{ listStyleType: 'none', display: 'flex', justifyContent: 'center', marginBottom: '8px', fontSize: '12px', color: '#586069' }}>\n      <li>\n        <Link to=\"/about\">关于</Link>\n      </li>\n      <li>\n        <a href=\"https://github.com/SeanChao/libsjtu\">参与</a>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport ListView from '../component/ListView';\nimport { Container, Grid, Snackbar, Tab, Tabs } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { getCanteenData, getLibraryData } from '../lib/fetcher';\nimport Footer from '../component/Footer';\nimport { useLocalStorageState } from 'ahooks';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  campusFilter: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst filterCampus = (dataList, campusId) => dataList.filter((item) => (campusId === 0) ^ item.name.includes('徐汇'));\n\nconst HomeView = () => {\n  const classes = useStyles();\n  const [campus, setCampus] = useLocalStorageState('campus', 0);\n\n  const [dataCanteen, setDataCanteen] = useState([]);\n  const [dataLib, setDataLib] = useState([]);\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [snackbarMsg, setSnackbarMsg] = useState('');\n\n  const [libDataLoading, setLibDataLoading] = useState(true);\n  const [canteenDataLoading, setCanteenDataLoading] = useState(true);\n\n  const fetchData = async () => {\n    const openSnackbar = (msg) => {\n      setShowSnackbar(true);\n      setSnackbarMsg(msg);\n    };\n    getCanteenData(\n      (data) => {\n        setDataCanteen(data);\n        setCanteenDataLoading(false);\n      },\n      () => {\n        openSnackbar('😥 获取食堂数据失败');\n      }\n    );\n    getLibraryData(\n      (data) => {\n        setDataLib(data);\n        setLibDataLoading(false);\n      },\n      () => {\n        openSnackbar('😫 获取图书馆数据失败');\n      }\n    );\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [snackbarMsg]);\n\n  useEffect(() => {\n    const interval = setInterval(() => fetchData(), 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const closeSnackbar = () => {\n    setShowSnackbar(false);\n    setSnackbarMsg('');\n  };\n\n  return (\n    <>\n      <Container>\n        <div className={classes.campusFilter}>\n          <Tabs value={campus} indicatorColor=\"primary\" textColor=\"primary\" onChange={(_, value) => setCampus(value)} centered>\n            <Tab label=\"闵行\" />\n            <Tab label=\"徐汇\" />\n          </Tabs>\n        </div>\n        <Grid container justify=\"center\" direction=\"column\" spacing={2}>\n          <Grid item style={{ marginTop: '20px' }}>\n            <ListView title=\"📖\" data={filterCampus(dataLib, campus)} loading={libDataLoading} />\n          </Grid>\n          <Grid item>\n            <ListView title=\"🍴\" data={filterCampus(dataCanteen, campus)} loading={canteenDataLoading} />\n          </Grid>\n        </Grid>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={showSnackbar}\n          autoHideDuration={2000}\n          onClose={() => closeSnackbar()}\n        >\n          <MuiAlert severity=\"error\">{snackbarMsg}</MuiAlert>\n        </Snackbar>\n        <Footer />\n      </Container>\n    </>\n  );\n};\n\nexport default HomeView;\n","import React from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport AboutView from './view/About';\nimport HomeView from './view/HomeView';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/about\">\n            <AboutView />\n          </Route>\n          <Route path=\"/\">\n            <HomeView />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType !== null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}